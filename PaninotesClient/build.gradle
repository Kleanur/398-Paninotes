plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'application'
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.beryx.runtime' version '1.12.5'
}

group 'org.innotevators'
version '1.3-RELEASE'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    implementation "org.jsoup:jsoup:1.14.3"
    implementation 'org.jfxtras:jmetro:11.6.15'
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'fr.brouillard.oss:cssfx:11.5.0'
    implementation 'com.github.iAmGio:animated:0.4.1'
    implementation 'io.github.typhon0:AnimateFX:1.2.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.1'
    implementation 'org.glassfish.jersey.core:jersey-common:2.22.2'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.0'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.0'
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"
}

application {
    mainClass = 'Launcher'
    applicationName = 'PaninotesClient'
}

javafx {
    version = "11.0.2"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.web']
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

// Uncomment and adjust the code below if you want to generate images for multiple platforms.
// (You need to also uncomment the line 'targetPlatformName = ...' in the jpackage block.)
/*
    targetPlatform("lin") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_linux_hotspot_15.0.2_7.tar.gz")
    }
    targetPlatform("mac") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_mac_hotspot_15.0.2_7.tar.gz") {
            downloadDir = "$buildDir/myMac"
            archiveName = "my-mac-jdk"
            archiveExtension = "tar.gz"
            pathToHome = "jdk-15.0.2+7/Contents/Home"
            overwrite = true
        }
    }
    targetPlatform("win") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_windows_hotspot_15.0.2_7.zip")
    }
*/

//    launcher {
//        noConsole = true
//    }
    jpackage {
        // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
//         targetPlatformName = "mac"

        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/PaninotesClient.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'InnoteVators']
        installerOptions += ['--verbose']
        if(currentOs.windows) {
            installerOptions += ['--type', 'exe']
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--type', 'deb']
            installerOptions += ['--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--type', 'dmg']
        }
    }
}